plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "9.17.0"
}

group 'ru.clevertec'
version '1.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.18.1")
}

dependencies {

    implementation(

            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-web',
            'org.flywaydb:flyway-core',
            "org.mapstruct:mapstruct:${mapstructVersion}",
            'org.postgresql:postgresql:42.6.0'
    )

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.testcontainers:junit-jupiter',
            'org.testcontainers:postgresql',
            "org.mockito:mockito-core:${mockitoVersion}",
            "org.mockito:mockito-junit-jupiter:${mockitoVersion}",
            'org.assertj:assertj-core:3.24.2'
    )

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.2"

    annotationProcessor(
            "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            'org.projectlombok:lombok-mapstruct-binding:0.2.0',
            'org.projectlombok:lombok'
    )
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
